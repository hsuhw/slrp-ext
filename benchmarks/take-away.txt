// take-away.txt
//
// A very basic example of a take-away game discussed in the online book
// "Combinatorial Game Theory" by Thomas S. Ferguson.
//
// C - a chip
// N - no chip
//

// the number of chips is 4k
I0 {
    init: s0;

    s0 -> s1 C;
    s1 -> s2 C;
    s2 -> s3 C;
    s3 -> s4 C;
    s4 -> s1 C;
    s0 -> sf N;
    sf -> sf N;

    accepting: s4;
}

// no chip any more
F {
    init: s0;

    s0 -> s0 N;

    accepting: s0;
}

P1 {
    init: s0;

    s0 -> sk C/C; // normal rounds
    sk -> sk C/C;

    s0 -> sf C/win1; // final rounds
    s0 -> s1 C/win1;
    s0 -> s2 C/win1;

    sk -> sf C/N; // takes one `i`
    sk -> s1 C/N;
    s1 -> sf C/N; // takes two `i`
    sk -> s2 C/N;
    s2 -> s1 C/N; // takes three `i`

    sf -> sf N/N;

    accepting: sf;
}

P2 {
    init: s0;

    s0 -> s0 C/C;

    s0 -> sf C/N; // takes one `i`
    s0 -> s1 C/N;
    s1 -> sf C/N; // takes two `i`
    s0 -> s2 C/N;
    s2 -> s1 C/N; // takes three `i`

    sf -> sf N/N;

    accepting: sf;
}

transducerStateGuessing: 1 .. 2;
automatonStateGuessing: 1 .. 5;
